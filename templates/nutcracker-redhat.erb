#!/bin/sh
#chkconfig: 2345 95 20
   # description: Nutcracker
   # processname: <%= @name %>

### BEGIN INIT INFO
# Provides:          <%= @name %>
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Stop/start nutcracker <%= @name %>.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC=<%= @name %>
NAME=<%= @name %>
PROCESS=nutcracker
CONFFILE=/etc/nutcracker/<%= @name %>.yml
LOGFILE=/var/log/nutcracker/<%= @name %>.log
DAEMON=/usr/sbin/nutcracker
PIDFILE=/var/run/nutcracker/$NAME.pid
DAEMON_ARGS="-v <%= @verbosity %> -c $CONFFILE -m <%= @mbuf %> -o $LOGFILE -p $PIDFILE -a <%= @statsaddress %> -s <%= @statsport %> -i <%= @statsinterval %> -d"
SCRIPTNAME=/etc/init.d/$NAME

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

start() {
        [ -x $prog ] || exit 5
        [ -d $LOGPATH ] || mkdir $LOGPATH
        [ -f $LOGFILE ] || touch $LOGFILE

        echo -n $"Starting $NAME: "
        $DAEMON $DAEMON_ARGS  >> $LOGFILE
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ]
        return $RETVAL
}

stop() {
        echo -n $"Stopping $NAME: "
        killproc $PROCESS
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ]
        return $RETVAL
}

restart() {
        stop
        start
}

rh_status() {
        status -p $PIDFILE $prog
}

rh_status_q() {
        rh_status >/dev/null 2>&1
}

case "$1" in
        start)
                rh_status_q && exit 0
                $1
        ;;
        stop)
                rh_status_q && exit 0
                $1
        ;;
        restart)
                $1
        ;;
        status)
                rh_status
        ;;
        *)
                echo $"Usage: $0 {start|stop|status|restart}"
                exit 2
esac
